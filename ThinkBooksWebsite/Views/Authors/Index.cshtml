@model IEnumerable<ThinkBooksWebsite.Models.Author>
@using ThinkBooksWebsite.Services.HtmlHelper

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@
<p>&nbsp;</p>

<form method="get">
    
    <label>AuthorID</label>
    <input type="text" size="5" name="authorIDFilter" id="authorIDFilter" value="@ViewBag.AuthorIDFilter" />
    <label>FirstName</label>
    <input type="text" name="firstNameFilter" id="firstNameFilter" value="@ViewBag.FirstNameFilter" />
    <label>LastName</label>
    <input type="text" name="lastNameFilter" id="lastNameFilter" value="@ViewBag.LastNameFilter" />
    <label>DateOfBirth</label>
    <input type="date" name="dateOfBirthFilter" id="dateOfBirthFilter" value="@ViewBag.DateOfBirthFilter" />
    <label>Results</label>
    <select name="results" id="results">
        <option value="20" @Util.SetSelected(ViewBag.Results, "20")>20</option>
        <option value="50" @Util.SetSelected(ViewBag.Results, "50")>50</option>
        <option value="100" @Util.SetSelected(ViewBag.Results, "100")>100</option>
        <option value="500" @Util.SetSelected(ViewBag.Results, "500")>500</option>
        <option value="5000" @Util.SetSelected(ViewBag.Results, "5000")>5000</option>
        <option value="all" @Util.SetSelected(ViewBag.Results, "all")>All</option>
    </select>
    <input type="submit" value="Search"/>

    <p>&nbsp;</p>
    <span class="total-results">Results: @ViewBag.TotalQueryCountOfAuthors</span>
    @*<span class="PageCount">PageCount: @ViewBag.PageCount</span>*@
    <br />
    <!-- need to store current page if sort button is pressed-->
    <input type="hidden" name="currentPage" value="@ViewBag.CurrentPage"/>
    @*<span>currentPage: @ViewBag.CurrentPage</span>*@
    <span>Page @ViewBag.CurrentPage of @ViewBag.PageCount</span>
    <!-- need to stored current sort if next or previous button pressed-->
    @*<input type="hidden" name="currentSortOrder" value="@ViewBag.CurrentSortOrder" />*@
    @*<span>currentSortOrder: @ViewBag.CurrentSortOrder</span>*@

    <button type="submit" name="page" id="previousPage" value="@ViewBag.PreviousPage">Previous Page</button> || 
    <button type="submit" name="page" id="nextPage" value="@ViewBag.NextPage">Next Page</button>

    <br />
    <table class="table">
        <tr>
            <th><button type="submit" name="sortColumnAndDirection" id="sortColumnAuthorID" value="@ViewBag.SortParamAuthorID">AuthorID</button></th>
            <th><button type="submit" name="sortColumnAndDirection" id="sortColumnFirstName" value="@ViewBag.SortParamFirstName">First Name</button></th>
            <th><button type="submit" name="sortColumnAndDirection" id="sortColumnLastName" value="@ViewBag.SortParamLastName">Last Name</button></th>
            <th><button type="submit" name="sortColumnAndDirection" id="sortColumnDateOfBirth" value="@ViewBag.SortParamDateOfBirth">Date Of Birth</button></th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AuthorID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>@item.DateOfBirth.ToShortDateString()
                    @*@Html.DisplayFor(modelItem => item.DateOfBirth)*@
                </td>
                @*<td>
                    @Html.ActionLink("Edit", "Edit", new {id = item.AuthorID}) |
                    @Html.ActionLink("Details", "Details", new {id = item.AuthorID}) |
                    @Html.ActionLink("Delete", "Delete", new {id = item.AuthorID})
                </td>*@
            </tr>
        }

    </table>
</form>